@using MvcBookStore.Utils
@model IEnumerable<MvcBookStore.Models.Author>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            @*<th>
                    @Html.DisplayNameFor(model => model.Biography)
                </th>*@
            <th>Actions</th>
        </tr>
    </thead>

    <tbody data-bind="foreach: authors">
        <tr>
            <td data-bind="text: FirstName"></td>
            <td data-bind="text: LastName"></td>
            <td>
                <a data-bind="attr: { href: '@Url.Action("Details")/' + Id}"
                   class="btn btn-info">Details</a>
                <a data-bind="attr: { href: '@Url.Action("Edit")/' + Id}"
                   class="btn btn-primary">Edit</a>
                <a data-bind="attr: { href: '@Url.Action("Delete")/' + Id}"
                   class="btn btn-danger">Delete</a>
            </td>
        </tr>
    </tbody>
    @*@foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Biography)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }*@
</table>

@section scripts {
    <script>
        //var viewModel = new AuthorViewModel(@Html.Raw(Model.ToJson()));
        var viewModel = new AuthorViewModel(@Html.HtmlConvertToJson(Model));
        ko.applyBindings(viewModel);
    </script>
}