@using MvcBookStore.Models
@using MvcBookStore.Utils
@using X.PagedList
@using X.PagedList.Mvc
@model IEnumerable<MvcBookStore.Models.Author>

@{
    ViewBag.Title = "Index";
    var queryOption = ViewBag.QueryOption as QueryOption;
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>
                @Html.BuildSortableLink(Html.DisplayNameFor(m => m.FirstName).ToHtmlString(), "Index", "FirstName", queryOption)
            </th>
            <th>
                @Html.BuildSortableLink(Html.DisplayNameFor(m => m.LastName).ToHtmlString(), "Index", "LastName", queryOption)
            </th>
            <th>Actions</th>
        </tr>
    </thead>

    <tbody data-bind="foreach: authors">
        <tr>
            <td data-bind="text: FirstName"></td>
            <td data-bind="text: LastName"></td>
            <td>
                <a data-bind="attr: { href: '@Url.Action("Details")/' + Id}"
                   class="btn btn-info">Details</a>
                <a data-bind="attr: { href: '@Url.Action("Edit")/' + Id}"
                   class="btn btn-primary">Edit</a>
                <a data-bind="attr: { href: '@Url.Action("Delete")/' + Id}"
                   class="btn btn-danger">Delete</a>
            </td>
        </tr>
    </tbody>
</table>
@Html.PagedListPager(ViewBag.PagedList as IPagedList, page => Url.Action("Index", queryOption.Page(page)))
@section scripts {
    <script>
        var viewModel = new AuthorViewModel(@Html.HtmlConvertToJson(Model));
        ko.applyBindings(viewModel);
    </script>
}